@function to-list($value, $keep: 'both') {
   $keep: if(index('keys''values', $keep), $keep, 'both');

   @if type-of($value)=='map' {
      $keys: ();
      $values: ();

      @each $key,
      $val in $value {
         $keys: append($keys, $key);
         $values: append($values, $val);
      }

      @if $keep=='keys' {
         @return $keys;
      }

      @else if $keep=='values' {
         @return $values;
      }

      @else {
         @return zip($keys, $values);
      }
   }

   @return if(type-of($value) !='list', ($value, ), $value);
}

///
/// Removes value(s) `$value` from `$list`.
///
/// @ignore Documentation: http://at-import.github.io/SassyLists/documentation/#function-sl-remove
///
/// @requires sl-replace
///
/// @param {List}    $list      - list to update
/// @param {*}       $value     - value to remove
///
/// @example
/// sl-remove(a b c, a)
/// // b c
///
/// @return {List}
///

@function sl-remove($list, $value) {
   $_: sl-missing-dependencies('sl-replace');

   @return sl-replace($list, $value, null);
}

///
/// @requires sl-remove
/// @alias sl-remove
///

@function sl-without($list, $value) {
   @return sl-remove($list, $value);
}

///
/// Replaces `$old` by `$new` in `$list`.
///
/// @ignore Documentation: http://at-import.github.io/SassyLists/documentation/#function-sl-replace
///
/// @requires sl-is-true
/// @requires sl-purge
/// @requires sl-to-list
///
/// @param {List}    $list  - list to update
/// @param {*}       $old   - value to replace
/// @param {*}       $value - new value for $old
///
/// @example
/// sl-replace(a b c, b, z)
/// // a z c
///
/// @example
/// sl-replace(a b c, y, z)
/// // a b c
/// 
/// @return {List}
///

@function sl-replace($list, $old, $value) {
   $_: sl-missing-dependencies('sl-is-true', 'sl-purge', 'sl-to-list');

   $running: true;

   @while $running {
      $index: index($list, $old);

      @if not $index {
         $running: false;
      }

      @else {
         $list: set-nth($list, $index, $value);
      }

   }

   $list: if(sl-is-true($value), $list, sl-purge($list));

   @return sl-to-list($list);
}